{"ast":null,"code":"import { fromJS } from 'immutable';\nimport { CREATE_USER_STAGE, FAIL_FETCH_USER_STAGES, FAIL_UPDATE_USER_STAGE, FETCH_USER_STAGES, UPDATE_USER_STAGE, FETCH_USERS, FAIL_FETCH_USERS } from 'store/actionTypes/UserStage';\nconst initialState = {\n  users: [],\n  stages: []\n};\nexport const UserStageReducer = (state = fromJS(initialState), {\n  type,\n  EmployeeId,\n  StageId,\n  JobOfferId,\n  Initiate,\n  StageIds,\n  listOfUsers,\n  newUser,\n  userStages,\n  newUserStage,\n  createdNewStage\n}) => {\n  switch (type) {\n    // fetching some user data\n    case FETCH_USERS:\n      return state.set('users', listOfUsers);\n\n    case FAIL_FETCH_USERS:\n      return state.set('users', []);\n    // updating a single usr Stage\n\n    case UPDATE_USER_STAGE:\n      return state;\n\n    case FAIL_UPDATE_USER_STAGE:\n      return state;\n    // fetch user stages\n\n    case FETCH_USER_STAGES:\n      return state.set('stages', userStages);\n\n    case FAIL_FETCH_USER_STAGES:\n      return state;\n    // // updating user stages\n    // case UPDATE_USER_STAGE:\n\n    case FAIL_UPDATE_USER_STAGE:\n      return state;\n    // creating a new userStage\n\n    case CREATE_USER_STAGE:\n      return state.set('stages', state.get('stages').push(newUserStage));\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/store/reducers/UserStage.ts"],"names":["fromJS","CREATE_USER_STAGE","FAIL_FETCH_USER_STAGES","FAIL_UPDATE_USER_STAGE","FETCH_USER_STAGES","UPDATE_USER_STAGE","FETCH_USERS","FAIL_FETCH_USERS","initialState","users","stages","UserStageReducer","state","type","EmployeeId","StageId","JobOfferId","Initiate","StageIds","listOfUsers","newUser","userStages","newUserStage","createdNewStage","set","get","push"],"mappings":"AAAA,SAAcA,MAAd,QAA4B,WAA5B;AACA,SAIIC,iBAJJ,EAOIC,sBAPJ,EASIC,sBATJ,EAUIC,iBAVJ,EAYIC,iBAZJ,EAaIC,WAbJ,EAcIC,gBAdJ,QAeO,6BAfP;AAgBA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;AAKA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGZ,MAAM,CAACQ,YAAD,CAAf,EAA+B;AAAEK,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA,OAApB;AAA6BC,EAAAA,UAA7B;AAAyCC,EAAAA,QAAzC;AAAmDC,EAAAA,QAAnD;AAA6DC,EAAAA,WAA7D;AAA0EC,EAAAA,OAA1E;AAAmFC,EAAAA,UAAnF;AAA+FC,EAAAA,YAA/F;AAA6GC,EAAAA;AAA7G,CAA/B,KAA4K;AACxM,UAAQV,IAAR;AACI;AACA,SAAKP,WAAL;AACI,aAAOM,KAAK,CAACY,GAAN,CAAU,OAAV,EAAmBL,WAAnB,CAAP;;AAGJ,SAAKZ,gBAAL;AACI,aAAOK,KAAK,CAACY,GAAN,CAAU,OAAV,EAAmB,EAAnB,CAAP;AAGJ;;AACA,SAAKnB,iBAAL;AACI,aAAOO,KAAP;;AAGJ,SAAKT,sBAAL;AACI,aAAOS,KAAP;AAGJ;;AACA,SAAKR,iBAAL;AACI,aAAOQ,KAAK,CAACY,GAAN,CAAU,QAAV,EAAoBH,UAApB,CAAP;;AAEJ,SAAKnB,sBAAL;AACI,aAAOU,KAAP;AAIJ;AACA;;AAIA,SAAKT,sBAAL;AACI,aAAOS,KAAP;AAGJ;;AACA,SAAKX,iBAAL;AACI,aAAOW,KAAK,CAACY,GAAN,CAAU,QAAV,EAAoBZ,KAAK,CAACa,GAAN,CAAU,QAAV,EAAoBC,IAApB,CAAyBJ,YAAzB,CAApB,CAAP;;AAOJ;AACI,aAAOV,KAAP;AA/CR;AAiDH,CAlDM","sourcesContent":["import { Map, fromJS } from 'immutable'\nimport {\n    CHANGE_USER_STAGE,\n    FAIL_CHANGE_USER_STAGE,\n    CHANGE_ORDER_OF_USER_STAGE,\n    CREATE_USER_STAGE,\n    FAIL_CHANGE_ORDER_OF_USER_STAGE,\n    FAIL_CREATE_USER_STAGE,\n    FAIL_FETCH_USER_STAGES,\n    FAIL_REMOVE_USER_STAGE,\n    FAIL_UPDATE_USER_STAGE,\n    FETCH_USER_STAGES,\n    REMOVE_USER_STAGE,\n    UPDATE_USER_STAGE,\n    FETCH_USERS,\n    FAIL_FETCH_USERS\n} from 'store/actionTypes/UserStage';\nconst initialState = {\n    users: [],\n    stages: []\n};\n\nexport const UserStageReducer = (state = fromJS(initialState), { type, EmployeeId, StageId, JobOfferId, Initiate, StageIds, listOfUsers, newUser, userStages, newUserStage, createdNewStage }: any): any => {\n    switch (type) {\n        // fetching some user data\n        case FETCH_USERS:\n            return state.set('users', listOfUsers)\n\n\n        case FAIL_FETCH_USERS:\n            return state.set('users', [])\n\n\n        // updating a single usr Stage\n        case UPDATE_USER_STAGE:\n            return state\n\n\n        case FAIL_UPDATE_USER_STAGE:\n            return state\n\n\n        // fetch user stages\n        case FETCH_USER_STAGES:\n            return state.set('stages', userStages)\n\n        case FAIL_FETCH_USER_STAGES:\n            return state\n\n\n\n        // // updating user stages\n        // case UPDATE_USER_STAGE:\n\n\n\n        case FAIL_UPDATE_USER_STAGE:\n            return state\n\n\n        // creating a new userStage\n        case CREATE_USER_STAGE:\n            return state.set('stages', state.get('stages').push(newUserStage))\n\n\n\n\n\n\n        default:\n            return state\n    }\n};\n"]},"metadata":{},"sourceType":"module"}