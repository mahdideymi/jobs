{"ast":null,"code":"import { takeLatest, put, call } from 'redux-saga/effects';\nimport { applyResumeError, applyResumeSuccess } from 'store/actions';\nimport { APPLYRESUME_ERROR, APPLYRESUME_SUCCESS, APPLYRESUME_REQUEST } from 'store/actionTypes';\nexport function applyResumeWorker() {\n  return new Promise(async (resolve, reject) => {\n    try {//todo: here send parameter\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\nexport function* applyResumeResult() {\n  try {\n    const result = yield call(applyResumeWorker); //todo: send parameter\n\n    yield put(applyResumeSuccess(APPLYRESUME_SUCCESS));\n  } catch (e) {\n    yield put(applyResumeError(APPLYRESUME_ERROR));\n  }\n}\nexport function* applyResumeFlow() {\n  yield takeLatest(APPLYRESUME_REQUEST, applyResumeResult);\n}","map":{"version":3,"sources":["/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/store/sagas/applyResumeSaga.tsx"],"names":["takeLatest","put","call","applyResumeError","applyResumeSuccess","APPLYRESUME_ERROR","APPLYRESUME_SUCCESS","APPLYRESUME_REQUEST","applyResumeWorker","Promise","resolve","reject","e","applyResumeResult","result","applyResumeFlow"],"mappings":"AACA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,eAArD;AACA,SACEC,iBADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,mBAJP;AAMA,OAAO,SAASC,iBAAT,GAA6B;AAClC,SAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5C,QAAI,CACF;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACVD,MAAAA,MAAM,CAACC,CAAD,CAAN;AACD;AACF,GANM,CAAP;AAOD;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACnC,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMZ,IAAI,CAACM,iBAAD,CAAzB,CADE,CAC4C;;AAC9C,UAAMP,GAAG,CAACG,kBAAkB,CAACE,mBAAD,CAAnB,CAAT;AACD,GAHD,CAGE,OAAOM,CAAP,EAAU;AACV,UAAMX,GAAG,CAACE,gBAAgB,CAACE,iBAAD,CAAjB,CAAT;AACD;AACF;AAED,OAAO,UAAUU,eAAV,GAAiC;AACtC,QAAMf,UAAU,CAACO,mBAAD,EAAsBM,iBAAtB,CAAhB;AACD","sourcesContent":["import Api from 'Api/api';\nimport { takeLatest, put, call } from 'redux-saga/effects';\nimport { applyResumeError, applyResumeSuccess } from 'store/actions';\nimport {\n  APPLYRESUME_ERROR,\n  APPLYRESUME_SUCCESS,\n  APPLYRESUME_REQUEST,\n} from 'store/actionTypes';\n\nexport function applyResumeWorker() {\n  return new Promise(async (resolve, reject) => {\n    try {\n      //todo: here send parameter\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nexport function* applyResumeResult() {\n  try {\n    const result = yield call(applyResumeWorker); //todo: send parameter\n    yield put(applyResumeSuccess(APPLYRESUME_SUCCESS));\n  } catch (e) {\n    yield put(applyResumeError(APPLYRESUME_ERROR));\n  }\n}\n\nexport function* applyResumeFlow(): any {\n  yield takeLatest(APPLYRESUME_REQUEST, applyResumeResult);\n}\n"]},"metadata":{},"sourceType":"module"}