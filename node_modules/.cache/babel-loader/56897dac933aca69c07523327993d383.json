{"ast":null,"code":"var _jsxFileName = \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/pages/ApplyResume/ApplyResume.tsx\";\nimport React from 'react';\nimport { Input, Modal, Icon, Button } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport './ApplyResume.scss';\nconst applyResumeSchemaValid = Yup.object().shape({\n  fullName: Yup.string().min(2, 'نام بیشتر از ۲ کاراکتر باشد').max(50, 'نام کمتر از ۲۰ کاراکتر باشد').required('لطفا نام خود را وارد کنید'),\n  email: Yup.string().email('ایمیل نام معتبر').required('لطفا ایمیل خود را وارد کنید'),\n  phoneNumber: Yup.string().matches(/^(\\+98|0098|98|0)?9\\d{9}$/, 'تلفن همراه نامعتبر است').required('لطفا تلفن همراه را وارد کنید'),\n  file: Yup.mixed().required('لطفا فایل مدنظر خود را اضافه کنید')\n});\nexport const ApplyResume = props => {\n  return React.createElement(Modal, {\n    closable: false,\n    visible: props.visible,\n    title: React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"close\",\n      onClick: props.cancle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginRight: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"\\u0646\\u0647\\u0627\\u06CC\\u06CC \\u0633\\u0627\\u0632\\u06CC \\u0627\\u0631\\u0633\\u0627\\u0644 \\u0631\\u0632\\u0648\\u0645\\u0647\")),\n    onOk: props.ok,\n    onCancel: props.cancle,\n    footer: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      fullName: '',\n      email: '',\n      phoneNumber: '',\n      file: undefined\n    },\n    validationSchema: applyResumeSchemaValid,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setSubmitting(true);\n      console.log('value', values);\n      setSubmitting(false); //todo: after have api dispach send resume action here\n      //   dispatch(\n      //     applyResumeRequest(\n      //       values.fullName,\n      //       values.email,\n      //       values.phoneNumber,\n      //       values.file,\n      //     ),\n      //   );\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, ({\n    values,\n    touched,\n    errors,\n    // dirty,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  }) => React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"applyResume__input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"applyResume__input__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\u0646\\u0627\\u0645 \\u0648\\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC\"), React.createElement(Input, {\n    className: errors.fullName && touched.fullName ? 'applyResume__input--error' : '',\n    id: \"fullName\",\n    placeholder: \"\\u0646\\u0627\\u0645 \\u0648 \\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC\",\n    type: \"text\",\n    value: values.fullName,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), errors.fullName && touched.fullName && React.createElement(\"p\", {\n    className: \"applyResume__input--textError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, errors.fullName)), React.createElement(\"div\", {\n    className: \"applyResume__input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"applyResume__input__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\"), React.createElement(Input, {\n    className: errors.email && touched.email ? 'applyResume__input--error' : '',\n    id: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644*\",\n    type: \"email\",\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), errors.email && touched.email && React.createElement(\"p\", {\n    className: \"applyResume__input--textError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, errors.email)), React.createElement(\"div\", {\n    className: \"applyResume__input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"applyResume__input__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"\\u0634\\u0645\\u0627\\u0631\\u0647 \\u062A\\u0644\\u0641\\u0646\"), React.createElement(Input, {\n    className: errors.phoneNumber && touched.phoneNumber ? 'applyResume__input--error' : '',\n    id: \"phoneNumber\",\n    placeholder: \"\\u062A\\u0644\\u0641\\u0646 \\u0647\\u0645\\u0631\\u0627\\u0647\",\n    type: \"text\",\n    value: values.phoneNumber,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), errors.phoneNumber && touched.phoneNumber && React.createElement(\"p\", {\n    className: \"applyResume__input--textError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, errors.phoneNumber)), React.createElement(\"div\", {\n    className: \"applyResume__inputFilediv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"applyResume__input__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"\\u0641\\u0627\\u06CC\\u0644 \\u0631\\u0632\\u0648\\u0645\\u0647\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"file\",\n    style: {\n      border: '1px solid lightgray',\n      padding: '4px 8px',\n      borderRadius: 4,\n      cursor: 'pointer'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, values.file ? values.file.slice(values.file.lastIndexOf('\\\\') + 1, values.file.length < 25 ? values.file.length : values.file.lastIndexOf('\\\\') + 25) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \" \\u0628\\u0627\\u0631\\u06AF\\u0630\\u0627\\u0631\\u06CC \")), React.createElement(\"input\", {\n    style: {\n      marginTop: 8,\n      zIndex: -1,\n      opacity: 0\n    },\n    className: \"applyResume__inputFilediv__input\",\n    type: \"file\",\n    id: \"file\",\n    accept: \".pdf , .jpg , .jpeg\",\n    value: values.file,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), errors.file && touched.file && React.createElement(\"p\", {\n    className: \"applyResume__input--textError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, errors.file)), React.createElement(Button, {\n    style: {\n      width: '100%',\n      marginTop: 8\n    },\n    type: \"primary\",\n    disabled: isSubmitting,\n    name: \"\\u0627\\u0631\\u0633\\u0627\\u0644\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"\\u0627\\u0631\\u0633\\u0627\\u0644\"))));\n};","map":{"version":3,"sources":["/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/pages/ApplyResume/ApplyResume.tsx"],"names":["React","Input","Modal","Icon","Button","Formik","Yup","applyResumeSchemaValid","object","shape","fullName","string","min","max","required","email","phoneNumber","matches","file","mixed","ApplyResume","props","visible","display","alignItems","cancle","marginRight","ok","undefined","values","setSubmitting","console","log","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","border","padding","borderRadius","cursor","slice","lastIndexOf","length","marginTop","zIndex","opacity","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Input, Modal, Icon, Button } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport './ApplyResume.scss';\n\nconst applyResumeSchemaValid = Yup.object().shape({\n  fullName: Yup.string()\n    .min(2, 'نام بیشتر از ۲ کاراکتر باشد')\n    .max(50, 'نام کمتر از ۲۰ کاراکتر باشد')\n    .required('لطفا نام خود را وارد کنید'),\n  email: Yup.string()\n    .email('ایمیل نام معتبر')\n    .required('لطفا ایمیل خود را وارد کنید'),\n  phoneNumber: Yup.string()\n    .matches(/^(\\+98|0098|98|0)?9\\d{9}$/, 'تلفن همراه نامعتبر است')\n    .required('لطفا تلفن همراه را وارد کنید'),\n  file: Yup.mixed().required('لطفا فایل مدنظر خود را اضافه کنید'),\n});\n\ninterface IProps {\n  visible: boolean;\n  cancle: () => void;\n  ok: () => void;\n}\n\nexport const ApplyResume: React.FC<IProps> = props => {\n  return (\n    <Modal\n      closable={false}\n      visible={props.visible}\n      title={\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <Icon type='close' onClick={props.cancle} />\n          <span style={{ marginRight: 12 }}>نهایی سازی ارسال رزومه</span>\n        </div>\n      }\n      onOk={props.ok}\n      onCancel={props.cancle}\n      footer={null}>\n      <Formik\n        initialValues={{\n          fullName: '',\n          email: '',\n          phoneNumber: '',\n          file: undefined!,\n        }}\n        validationSchema={applyResumeSchemaValid}\n        onSubmit={(values, { setSubmitting }) => {\n          setSubmitting(true);\n          console.log('value', values);\n          setSubmitting(false);\n          //todo: after have api dispach send resume action here\n          //   dispatch(\n          //     applyResumeRequest(\n          //       values.fullName,\n          //       values.email,\n          //       values.phoneNumber,\n          //       values.file,\n          //     ),\n          //   );\n        }}>\n        {({\n          values,\n          touched,\n          errors,\n          // dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <div className='applyResume__input'>\n              <span className='applyResume__input__label'>\n                نام ونام خانوادگی\n              </span>\n              <Input\n                className={\n                  errors.fullName && touched.fullName\n                    ? 'applyResume__input--error'\n                    : ''\n                }\n                id='fullName'\n                placeholder='نام و نام خانوادگی'\n                type='text'\n                value={values.fullName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.fullName && touched.fullName && (\n                <p className='applyResume__input--textError'>\n                  {errors.fullName}\n                </p>\n              )}\n            </div>\n            <div className='applyResume__input'>\n              <span className='applyResume__input__label'>ایمیل</span>\n              <Input\n                className={\n                  errors.email && touched.email\n                    ? 'applyResume__input--error'\n                    : ''\n                }\n                id='email'\n                placeholder='ایمیل*'\n                type='email'\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.email && touched.email && (\n                <p className='applyResume__input--textError'>{errors.email}</p>\n              )}\n            </div>\n            <div className='applyResume__input'>\n              <span className='applyResume__input__label'>شماره تلفن</span>\n              <Input\n                className={\n                  errors.phoneNumber && touched.phoneNumber\n                    ? 'applyResume__input--error'\n                    : ''\n                }\n                id='phoneNumber'\n                placeholder='تلفن همراه'\n                type='text'\n                value={values.phoneNumber}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.phoneNumber && touched.phoneNumber && (\n                <p className='applyResume__input--textError'>\n                  {errors.phoneNumber}\n                </p>\n              )}\n            </div>\n            <div className='applyResume__inputFilediv'>\n              <span className='applyResume__input__label'>فایل رزومه</span>\n              <br />\n              <label\n                htmlFor='file'\n                style={{\n                  border: '1px solid lightgray',\n                  padding: '4px 8px',\n                  borderRadius: 4,\n                  cursor: 'pointer',\n                }}>\n                {values.file ? (\n                  (values.file as string).slice(\n                    (values.file as string).lastIndexOf('\\\\') + 1,\n                    (values.file as string).length < 25\n                      ? (values.file as string).length\n                      : (values.file as string).lastIndexOf('\\\\') + 25,\n                  )\n                ) : (\n                  <span> بارگذاری </span>\n                )}\n              </label>\n              <input\n                style={{ marginTop: 8, zIndex: -1, opacity: 0 }}\n                className='applyResume__inputFilediv__input'\n                type='file'\n                id='file'\n                accept='.pdf , .jpg , .jpeg'\n                value={values.file}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.file && touched.file && (\n                <p className='applyResume__input--textError'>{errors.file}</p>\n              )}\n            </div>\n            <Button\n              style={{ width: '100%', marginTop: 8 }}\n              type='primary'\n              disabled={isSubmitting}\n              name='ارسال'\n              htmlType='submit'>\n              ارسال\n            </Button>\n          </form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}