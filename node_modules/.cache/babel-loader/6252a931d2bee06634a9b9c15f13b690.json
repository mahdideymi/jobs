{"ast":null,"code":"import _slicedToArray from \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/components/JobCreateModal/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Modal, Button, Form, Input, Typography } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { addJob, editJob } from 'store/actions';\nimport './style.scss';\nconst Text = Typography.Text;\nconst TextArea = Input.TextArea;\nconst schema = Yup.object().shape({\n  title: Yup.string().trim('لطفا عنوان موقعیت شغلی را وارد کنید').required('لطفا عنوان موقعیت شغلی را وارد کنید'),\n  description: Yup.string().trim('ناموسا یکم توضیح بدهید').required('ناموسا یک توضیحی بده').min(15, 'انصافا 4 کلمه بیشتر')\n});\nexport const JobCreateModal = props => {\n  const dispatch = useDispatch();\n  const jobs = useSelector(state => state.jobs);\n\n  const _useState = useState(props.isVisible),\n        _useState2 = _slicedToArray(_useState, 2),\n        visible = _useState2[0],\n        setVisible = _useState2[1];\n\n  let job = jobs.jobs.find(item => item.jobId === props.id);\n\n  function handleOk(values) {\n    console.log('values in add job form', values);\n    dispatch(addJob({\n      title: values.title,\n      description: values.description,\n      numOfCandidates: 10\n    }));\n    destroyModal();\n  }\n\n  function handleEdit(id, title) {\n    dispatch(editJob({\n      jobId: id,\n      title,\n      description: 'description',\n      numOfCandidates: 20\n    }));\n    destroyModal();\n  }\n\n  function destroyModal() {\n    setVisible(false);\n    props.hideModal(props.id);\n  }\n\n  useEffect(() => {\n    setVisible(props.isVisible);\n  }, [props.isVisible]);\n  return React.createElement(Modal, {\n    closable: false,\n    title: props.modalTitle,\n    visible: visible,\n    onCancel: () => {\n      destroyModal();\n    },\n    footer: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      title: job ? job.title : '',\n      description: job ? job.jobDescription : ''\n    },\n    validationSchema: schema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      if (props.modalTitle === 'ویرایش') {\n        handleEdit(props.id, values.title);\n      } else {\n        handleOk(values);\n      }\n\n      setSubmitting(false);\n      values.title = '';\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, ({\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  }) => React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\\u0639\\u0646\\u0648\\u0627\\u0646 \\u0645\\u0648\\u0642\\u0639\\u06CC\\u062A \\u0634\\u063A\\u0644\\u06CC\"), React.createElement(Input, {\n    className: \"job-create-modal__input \".concat(errors.title && touched.title ? 'job-create-modal__input--error' : '', \" \"),\n    id: \"title\",\n    placeholder: \"\\u0637\\u0631\\u0627\\u062D \\u06AF\\u0631\\u0627\\u0641\\u06CC\\u06A9\",\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), errors.title && touched.title && React.createElement(Text, {\n    className: \"job-create-modal__danger\",\n    type: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, errors.title), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"\\u062A\\u0648\\u0636\\u06CC\\u062D\\u0627\\u062A\"), React.createElement(TextArea, {\n    autosize: {\n      minRows: 4,\n      maxRows: 6\n    },\n    className: errors.description && touched.description ? 'job-create-modal__input--error' : '',\n    id: \"description\",\n    placeholder: \"\\u062A\\u0648\\u0636\\u06CC\\u062D\\u0627\\u062A \\u0645\\u0648\\u0642\\u0639\\u06CC\\u062A \\u0634\\u063A\\u0644\\u06CC \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0628\\u0646\\u0648\\u06CC\\u0633\\u06CC\\u062F\",\n    value: values.description,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), errors.description && touched.description && React.createElement(Text, {\n    className: \"job-create-modal__danger\",\n    type: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, errors.description), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"\\u0627\\u06CC\\u062C\\u0627\\u062F\"))));\n};","map":{"version":3,"sources":["/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/components/JobCreateModal/index.tsx"],"names":["React","useState","useEffect","useSelector","useDispatch","Modal","Button","Form","Input","Typography","Formik","Yup","addJob","editJob","Text","TextArea","schema","object","shape","title","string","trim","required","description","min","JobCreateModal","props","dispatch","jobs","state","isVisible","visible","setVisible","job","find","item","jobId","id","handleOk","values","console","log","numOfCandidates","destroyModal","handleEdit","hideModal","modalTitle","jobDescription","setSubmitting","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","minRows","maxRows"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Modal, Button, Form, Input, Typography } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { addJob, editJob } from 'store/actions';\nimport './style.scss';\n\nconst { Text } = Typography;\nconst { TextArea } = Input;\n\nconst schema = Yup.object().shape({\n  title: Yup.string()\n    .trim('لطفا عنوان موقعیت شغلی را وارد کنید')\n    .required('لطفا عنوان موقعیت شغلی را وارد کنید'),\n  description: Yup.string()\n    .trim('ناموسا یکم توضیح بدهید')\n    .required('ناموسا یک توضیحی بده')\n    .min(15, 'انصافا 4 کلمه بیشتر'),\n});\n\ninterface IProps {\n  modalTitle: string;\n  id: number;\n  isVisible: boolean;\n  hideModal: (id: number) => void;\n}\n\nexport const JobCreateModal: React.FC<IProps> = props => {\n  const dispatch = useDispatch();\n  const jobs = useSelector((state: any) => state.jobs);\n  const [visible, setVisible] = useState(props.isVisible);\n\n  let job = jobs.jobs.find((item: any) => item.jobId === props.id);\n\n  function handleOk(values: any) {\n    console.log('values in add job form', values);\n    dispatch(\n      addJob({\n        title: values.title,\n        description: values.description,\n        numOfCandidates: 10,\n      }),\n    );\n    destroyModal();\n  }\n\n  function handleEdit(id: number, title: string) {\n    dispatch(\n      editJob({\n        jobId: id,\n        title,\n        description: 'description',\n        numOfCandidates: 20,\n      }),\n    );\n    destroyModal();\n  }\n\n  function destroyModal() {\n    setVisible(false);\n    props.hideModal(props.id);\n  }\n\n  useEffect(() => {\n    setVisible(props.isVisible);\n  }, [props.isVisible]);\n\n  return (\n    <Modal\n      closable={false}\n      title={props.modalTitle}\n      visible={visible}\n      onCancel={() => {\n        destroyModal();\n      }}\n      footer={null}>\n      <Formik\n        enableReinitialize\n        initialValues={{\n          title: job ? job.title : '',\n          description: job ? job.jobDescription : '',\n        }}\n        validationSchema={schema}\n        onSubmit={(values, { setSubmitting }) => {\n          if (props.modalTitle === 'ویرایش') {\n            handleEdit(props.id, values.title);\n          } else {\n            handleOk(values);\n          }\n          setSubmitting(false);\n          values.title = '';\n        }}>\n        {({\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <span>عنوان موقعیت شغلی</span>\n\n            <Input\n              className={`job-create-modal__input ${\n                errors.title && touched.title\n                  ? 'job-create-modal__input--error'\n                  : ''\n              } `}\n              id='title'\n              placeholder='طراح گرافیک'\n              value={values.title}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            {errors.title && touched.title && (\n              <Text className='job-create-modal__danger' type='danger'>\n                {errors.title}\n              </Text>\n            )}\n            <span>توضیحات</span>\n            <TextArea\n              autosize={{\n                minRows: 4,\n                maxRows: 6,\n              }}\n              className={\n                errors.description && touched.description\n                  ? 'job-create-modal__input--error'\n                  : ''\n              }\n              id='description'\n              placeholder='توضیحات موقعیت شغلی خود را بنویسید'\n              value={values.description}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            {errors.description && touched.description && (\n              <Text className='job-create-modal__danger' type='danger'>\n                {errors.description}\n              </Text>\n            )}\n            <Button type='primary' htmlType='submit' disabled={isSubmitting}>\n              ایجاد\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}