{"ast":null,"code":"import _defineProperty from \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/containers/StageContainer/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Card } from 'antd';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { StageEmployee } from 'components';\nimport './style.scss';\nexport default class StageContainer extends React.Component {\n  render() {\n    let droppableStyle = _objectSpread({}, this.props.provided.droppableProps.style, {\n      height: 'calc(100% - 44px)',\n      // overflow: 'auto',\n      padding: 12,\n      paddingBottom: this.props.isDraggingOver ? 96 : 'initial',\n      overflowY: this.props.isDraggingOver ? 'hidden' : 'auto',\n      overflowX: 'hidden',\n      transition: 'background-color 1s ease',\n      backgroundColor: this.props.isDraggingOver ? 'lightblue' : 'initial'\n    });\n\n    return React.createElement(Card, {\n      size: \"small\",\n      className: \"stage-container\",\n      title: React.createElement(\"div\", {\n        className: \"stage-container__head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"stage-container__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.stage.title), React.createElement(\"span\", {\n        className: \"stage-container__count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.props.people.length)),\n      bodyStyle: droppableStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        minHeight: '98%'\n      },\n      ref: this.props.innerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.people.map((person, index) => React.createElement(Draggable, {\n      key: person.id,\n      draggableId: person.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(StageEmployee, {\n      person: person,\n      provided: provided,\n      isDragging: snapshot.isDragging,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/containers/StageContainer/index.tsx"],"names":["React","Card","Draggable","StageEmployee","StageContainer","Component","render","droppableStyle","props","provided","droppableProps","style","height","padding","paddingBottom","isDraggingOver","overflowY","overflowX","transition","backgroundColor","stage","title","people","length","minHeight","innerRef","map","person","index","id","snapshot","isDragging"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,SAASC,aAAT,QAA8B,YAA9B;AAEA,OAAO,cAAP;AAUA,eAAe,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAAqD;AAClEC,EAAAA,MAAM,GAAG;AACP,QAAIC,cAAc,qBACb,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,cAApB,CAAmCC,KADtB;AAEhBC,MAAAA,MAAM,EAAE,mBAFQ;AAGhB;AACAC,MAAAA,OAAO,EAAE,EAJO;AAKhBC,MAAAA,aAAa,EAAE,KAAKN,KAAL,CAAWO,cAAX,GAA4B,EAA5B,GAAiC,SALhC;AAMhBC,MAAAA,SAAS,EAAE,KAAKR,KAAL,CAAWO,cAAX,GAA4B,QAA5B,GAAuC,MANlC;AAOhBE,MAAAA,SAAS,EAAE,QAPK;AAQhBC,MAAAA,UAAU,EAAE,0BARI;AAShBC,MAAAA,eAAe,EAAE,KAAKX,KAAL,CAAWO,cAAX,GAA4B,WAA5B,GAA0C;AAT3C,MAAlB;;AAYA,WACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,KAAK,EACH;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,KAAL,CAAWY,KAAX,CAAiBC,KADpB,CADF,EAIE;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKb,KAAL,CAAWc,MAAX,CAAkBC,MADrB,CAJF,CAJJ;AAaE,MAAA,SAAS,EAAEhB,cAbb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcE;AAAK,MAAA,KAAK,EAAE;AAAEiB,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAkC,MAAA,GAAG,EAAE,KAAKhB,KAAL,CAAWiB,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjB,KAAL,CAAWc,MAAX,CAAkBI,GAAlB,CAAsB,CAACC,MAAD,EAAcC,KAAd,KACrB,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAED,MAAM,CAACE,EAAvB;AAA2B,MAAA,WAAW,EAAEF,MAAM,CAACE,EAA/C;AAAmD,MAAA,KAAK,EAAED,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACnB,QAAD,EAAWqB,QAAX,KACC,oBAAC,aAAD;AACE,MAAA,MAAM,EAAEH,MADV;AAEE,MAAA,QAAQ,EAAElB,QAFZ;AAGE,MAAA,UAAU,EAAEqB,QAAQ,CAACC,UAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADD,CADH,CAdF,CADF;AA8BD;;AA5CiE","sourcesContent":["import React from 'react';\nimport { Card } from 'antd';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport { StageEmployee } from 'components';\n\nimport './style.scss';\n\ninterface IProps {\n  stage: any;\n  people: any;\n  innerRef: any;\n  provided: any;\n  isDraggingOver: boolean;\n}\n\nexport default class StageContainer extends React.Component<IProps> {\n  render() {\n    let droppableStyle = {\n      ...this.props.provided.droppableProps.style,\n      height: 'calc(100% - 44px)',\n      // overflow: 'auto',\n      padding: 12,\n      paddingBottom: this.props.isDraggingOver ? 96 : 'initial',\n      overflowY: this.props.isDraggingOver ? 'hidden' : 'auto',\n      overflowX: 'hidden',\n      transition: 'background-color 1s ease',\n      backgroundColor: this.props.isDraggingOver ? 'lightblue' : 'initial',\n    };\n\n    return (\n      <Card\n        size='small'\n        className='stage-container'\n        title={\n          <div className='stage-container__head'>\n            <span className='stage-container__title'>\n              {this.props.stage.title}\n            </span>\n            <span className='stage-container__count'>\n              {this.props.people.length}\n            </span>\n          </div>\n        }\n        bodyStyle={droppableStyle}>\n        <div style={{ minHeight: '98%' }} ref={this.props.innerRef}>\n          {this.props.people.map((person: any, index: number) => (\n            <Draggable key={person.id} draggableId={person.id} index={index}>\n              {(provided, snapshot) => (\n                <StageEmployee\n                  person={person}\n                  provided={provided}\n                  isDragging={snapshot.isDragging}\n                />\n              )}\n            </Draggable>\n          ))}\n        </div>\n      </Card>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}