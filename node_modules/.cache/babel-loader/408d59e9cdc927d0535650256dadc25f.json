{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport { ChangeUserStage, FailChangeUserStage, FetchUserStages, FailFetchUserStages, UpdateUserStage, FailChangeOrderOfUserStage, CreateUserStage, FailCreateUserStage, RemoveUserStage, FailRemoveUserStage, ChangeOrderOfUserStage } from 'store/actions';\nexport function* changeUserStage({\n  EmployeeId,\n  StageId,\n  JobOfferId\n}) {\n  try {\n    // const { data } = yield axios.put(\"/someFakeApi\");\n    yield put(ChangeUserStage({\n      EmployeeId,\n      StageId,\n      JobOfferId\n    }));\n  } catch (e) {\n    yield put(FailChangeUserStage());\n  }\n}\nexport function* fetchUserStages({\n  JobOfferId\n}) {\n  try {\n    // const { data } = yield axios.get(\"/someFakeUrl\") \n    yield put(FetchUserStages({\n      JobOfferId\n    }));\n  } catch (e) {\n    yield put(FailFetchUserStages());\n  }\n}\nexport function* updateUserStage({\n  StageId,\n  JobOfferId,\n  Initiate\n}) {\n  try {\n    // const {data} = yeild axios.put(\"/\", {some props here })\n    yield put(UpdateUserStage({\n      StageId,\n      JobOfferId,\n      Initiate\n    }));\n  } catch (e) {\n    yield put(FailChangeUserStage());\n  }\n}\nexport function* createUserStage({\n  StageName,\n  JobOfferId,\n  Initiate\n}) {\n  try {\n    // const { data} = yield axios.post(\"/someFakeUrl\", {  some props here  })\n    yield put(CreateUserStage({\n      StageName,\n      JobOfferId,\n      Initiate\n    }));\n  } catch (e) {\n    yield put(FailCreateUserStage());\n  }\n}\nexport function* removeUserStage({\n  StageId,\n  JobOfferId\n}) {\n  try {\n    // some fake api call should be here \n    yield put(RemoveUserStage({\n      StageId,\n      JobOfferId\n    }));\n  } catch (e) {\n    yield put(FailRemoveUserStage());\n  }\n}\nexport function* changeOrderOfUserStage({\n  StageIds,\n  JobOfferId\n}) {\n  try {\n    // some api call for { change order of user stage }\n    yield put(ChangeOrderOfUserStage({\n      StageIds,\n      JobOfferId\n    }));\n  } catch (e) {\n    yield put(FailChangeOrderOfUserStage());\n  }\n}","map":{"version":3,"sources":["/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/store/workers/UserStage.ts"],"names":["put","ChangeUserStage","FailChangeUserStage","FetchUserStages","FailFetchUserStages","UpdateUserStage","FailChangeOrderOfUserStage","CreateUserStage","FailCreateUserStage","RemoveUserStage","FailRemoveUserStage","ChangeOrderOfUserStage","changeUserStage","EmployeeId","StageId","JobOfferId","e","fetchUserStages","updateUserStage","Initiate","createUserStage","StageName","removeUserStage","changeOrderOfUserStage","StageIds"],"mappings":"AAAA,SAAeA,GAAf,QAAiC,oBAAjC;AACA,SAASC,eAAT,EAA0BC,mBAA1B,EAA+CC,eAA/C,EAAgEC,mBAAhE,EAAqFC,eAArF,EAAsGC,0BAAtG,EAAkIC,eAAlI,EAAmJC,mBAAnJ,EAAwKC,eAAxK,EAAyLC,mBAAzL,EAA8MC,sBAA9M,QAA4O,eAA5O;AAGA,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA;AAAvB,CAA1B,EAAoE;AACvE,MAAI;AACA;AACA,UAAMf,GAAG,CAACC,eAAe,CAAC;AAAEY,MAAAA,UAAF;AAAcC,MAAAA,OAAd;AAAuBC,MAAAA;AAAvB,KAAD,CAAhB,CAAT;AACH,GAHD,CAGE,OAAOC,CAAP,EAAU;AACR,UAAMhB,GAAG,CAACE,mBAAmB,EAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUe,eAAV,CAA0B;AAAEF,EAAAA;AAAF,CAA1B,EAA+C;AAClD,MAAI;AACA;AACA,UAAMf,GAAG,CAACG,eAAe,CAAC;AAAEY,MAAAA;AAAF,KAAD,CAAhB,CAAT;AACH,GAHD,CAGE,OAAOC,CAAP,EAAU;AACR,UAAMhB,GAAG,CAACI,mBAAmB,EAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUc,eAAV,CAA0B;AAAEJ,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBI,EAAAA;AAAvB,CAA1B,EAAkE;AACrE,MAAI;AACA;AACA,UAAMnB,GAAG,CAACK,eAAe,CAAC;AAAES,MAAAA,OAAF;AAAWC,MAAAA,UAAX;AAAuBI,MAAAA;AAAvB,KAAD,CAAhB,CAAT;AACH,GAHD,CAGE,OAAOH,CAAP,EAAU;AACR,UAAMhB,GAAG,CAACE,mBAAmB,EAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUkB,eAAV,CAA0B;AAAEC,EAAAA,SAAF;AAAaN,EAAAA,UAAb;AAAyBI,EAAAA;AAAzB,CAA1B,EAAoE;AACvE,MAAI;AACA;AACA,UAAMnB,GAAG,CAACO,eAAe,CAAC;AAAEc,MAAAA,SAAF;AAAaN,MAAAA,UAAb;AAAyBI,MAAAA;AAAzB,KAAD,CAAhB,CAAT;AACH,GAHD,CAGE,OAAOH,CAAP,EAAU;AACR,UAAMhB,GAAG,CAACQ,mBAAmB,EAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUc,eAAV,CAA0B;AAAER,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAA1B,EAAwD;AAC3D,MAAI;AACA;AACA,UAAMf,GAAG,CAACS,eAAe,CAAC;AAAEK,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,CAAhB,CAAT;AACH,GAHD,CAGE,OAAOC,CAAP,EAAU;AACR,UAAMhB,GAAG,CAACU,mBAAmB,EAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUa,sBAAV,CAAiC;AAAEC,EAAAA,QAAF;AAAYT,EAAAA;AAAZ,CAAjC,EAAgE;AACnE,MAAI;AACA;AACA,UAAMf,GAAG,CAACW,sBAAsB,CAAC;AAAEa,MAAAA,QAAF;AAAYT,MAAAA;AAAZ,KAAD,CAAvB,CAAT;AACH,GAHD,CAGE,OAAOC,CAAP,EAAU;AACR,UAAMhB,GAAG,CAACM,0BAA0B,EAA3B,CAAT;AACH;AACJ","sourcesContent":["import { call, put, delay } from 'redux-saga/effects';\nimport { ChangeUserStage, FailChangeUserStage, FetchUserStages, FailFetchUserStages, UpdateUserStage, FailChangeOrderOfUserStage, CreateUserStage, FailCreateUserStage, RemoveUserStage, FailRemoveUserStage, ChangeOrderOfUserStage } from 'store/actions'\nimport axios from 'configs/axios'\nimport { forwardTo } from 'configs/hisotry'\nexport function* changeUserStage({ EmployeeId, StageId, JobOfferId }: any) {\n    try {\n        // const { data } = yield axios.put(\"/someFakeApi\");\n        yield put(ChangeUserStage({ EmployeeId, StageId, JobOfferId }));\n    } catch (e) {\n        yield put(FailChangeUserStage())\n    }\n}\n\nexport function* fetchUserStages({ JobOfferId }: any) {\n    try {\n        // const { data } = yield axios.get(\"/someFakeUrl\") \n        yield put(FetchUserStages({ JobOfferId }))\n    } catch (e) {\n        yield put(FailFetchUserStages())\n    }\n}\n\nexport function* updateUserStage({ StageId, JobOfferId, Initiate }: any) {\n    try {\n        // const {data} = yeild axios.put(\"/\", {some props here })\n        yield put(UpdateUserStage({ StageId, JobOfferId, Initiate }))\n    } catch (e) {\n        yield put(FailChangeUserStage())\n    }\n}\n\nexport function* createUserStage({ StageName, JobOfferId, Initiate }: any) {\n    try {\n        // const { data} = yield axios.post(\"/someFakeUrl\", {  some props here  })\n        yield put(CreateUserStage({ StageName, JobOfferId, Initiate }))\n    } catch (e) {\n        yield put(FailCreateUserStage())\n    }\n}\n\nexport function* removeUserStage({ StageId, JobOfferId }: any) {\n    try {\n        // some fake api call should be here \n        yield put(RemoveUserStage({ StageId, JobOfferId }))\n    } catch (e) {\n        yield put(FailRemoveUserStage())\n    }\n}\n\nexport function* changeOrderOfUserStage({ StageIds, JobOfferId }: any) {\n    try {\n        // some api call for { change order of user stage }\n        yield put(ChangeOrderOfUserStage({ StageIds, JobOfferId }))\n    } catch (e) {\n        yield put(FailChangeOrderOfUserStage())\n    }\n}"]},"metadata":{},"sourceType":"module"}