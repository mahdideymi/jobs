{"ast":null,"code":"var _jsxFileName = \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/components/JobCreateModal/index.tsx\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Modal, Button, Form, Input, Typography } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { addJob, editJob } from 'store/actions';\nimport './style.scss';\nconst Text = Typography.Text;\nconst TextArea = Input.TextArea;\nconst schema = Yup.object().shape({\n  title: Yup.string().required('لطفا عنوان موقعیت شغلی را وارد کنید').min(3, 'عنوان موقعیت شغلی نمیتواند از 3 حرف کمتر باشد').max(20, 'عنوان موقعیت شغلی نمیتواند از 20 حرف بیشتر باشد'),\n  description: Yup.string().required('لطفا توضیحات را وارد کنید').min(5, 'توضیحات نمیتواند از 5 حرف کمتر باشد').max(100, 'توضیحات نمیتواند از 100 حرف بیشتر باشد')\n});\nexport const JobCreateModal = props => {\n  const dispatch = useDispatch();\n\n  function handleOk(values) {\n    dispatch(addJob({\n      title: values.title.trim(),\n      description: values.description.trim()\n    }));\n    props.hideModal();\n  }\n\n  function handleEdit(id, values) {\n    dispatch(editJob({\n      id,\n      title: values.title.trim(),\n      description: values.description.trim()\n    }));\n    props.hideModal();\n  }\n\n  return React.createElement(Modal, {\n    destroyOnClose: true,\n    closable: false,\n    title: props.modalTitle,\n    visible: props.isVisible,\n    onCancel: () => props.hideModal(),\n    footer: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      title: props.job ? props.job.title : '',\n      description: props.job ? props.job.description : ''\n    },\n    validationSchema: schema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      if (props.modalTitle === 'ویرایش') {\n        handleEdit(props.job.id, values);\n      } else {\n        handleOk(values);\n      }\n\n      setSubmitting(false);\n      values.title = '';\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, ({\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  }) => React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"\\u0639\\u0646\\u0648\\u0627\\u0646 \\u0645\\u0648\\u0642\\u0639\\u06CC\\u062A \\u0634\\u063A\\u0644\\u06CC\"), React.createElement(Input, {\n    autoComplete: \"off\",\n    className: \"job-create-modal__input \".concat(errors.title && touched.title ? 'job-create-modal__input--error' : '', \" \"),\n    id: \"title\",\n    placeholder: \"\\u0637\\u0631\\u0627\\u062D \\u06AF\\u0631\\u0627\\u0641\\u06CC\\u06A9\",\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), errors.title && touched.title && React.createElement(Text, {\n    className: \"job-create-modal__danger\",\n    type: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, errors.title), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\u062A\\u0648\\u0636\\u06CC\\u062D\\u0627\\u062A\"), React.createElement(TextArea, {\n    autosize: {\n      minRows: 4,\n      maxRows: 6\n    },\n    className: \"job-create-modal__input \".concat(errors.description && touched.description ? 'job-create-modal__input--error' : ''),\n    id: \"description\",\n    placeholder: \"\\u062A\\u0648\\u0636\\u06CC\\u062D\\u0627\\u062A \\u0645\\u0648\\u0642\\u0639\\u06CC\\u062A \\u0634\\u063A\\u0644\\u06CC \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0628\\u0646\\u0648\\u06CC\\u0633\\u06CC\\u062F\",\n    value: values.description,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), errors.description && touched.description && React.createElement(Text, {\n    className: \"job-create-modal__danger\",\n    type: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, errors.description), React.createElement(Button, {\n    className: \"job-create-modal__button\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"\\u0627\\u06CC\\u062C\\u0627\\u062F\"))));\n};","map":{"version":3,"sources":["/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/components/JobCreateModal/index.tsx"],"names":["React","useDispatch","Modal","Button","Form","Input","Typography","Formik","Yup","addJob","editJob","Text","TextArea","schema","object","shape","title","string","required","min","max","description","JobCreateModal","props","dispatch","handleOk","values","trim","hideModal","handleEdit","id","modalTitle","isVisible","job","setSubmitting","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","minRows","maxRows"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Modal, Button, Form, Input, Typography } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { addJob, editJob } from 'store/actions';\nimport './style.scss';\n\nconst { Text } = Typography;\nconst { TextArea } = Input;\n\nconst schema = Yup.object().shape({\n  title: Yup.string()\n    .required('لطفا عنوان موقعیت شغلی را وارد کنید')\n    .min(3, 'عنوان موقعیت شغلی نمیتواند از 3 حرف کمتر باشد')\n    .max(20, 'عنوان موقعیت شغلی نمیتواند از 20 حرف بیشتر باشد'),\n  description: Yup.string()\n    .required('لطفا توضیحات را وارد کنید')\n    .min(5, 'توضیحات نمیتواند از 5 حرف کمتر باشد')\n    .max(100, 'توضیحات نمیتواند از 100 حرف بیشتر باشد'),\n});\n\ninterface IProps {\n  modalTitle: string;\n  job: any;\n  isVisible: boolean;\n  hideModal: () => void;\n}\n\nexport const JobCreateModal: React.FC<IProps> = props => {\n  const dispatch = useDispatch();\n\n  function handleOk(values: any) {\n    dispatch(\n      addJob({\n        title: values.title.trim(),\n        description: values.description.trim(),\n      }),\n    );\n    props.hideModal();\n  }\n\n  function handleEdit(id: number, values: any) {\n    dispatch(\n      editJob({\n        id,\n        title: values.title.trim(),\n        description: values.description.trim(),\n      }),\n    );\n    props.hideModal();\n  }\n\n  return (\n    <Modal\n      destroyOnClose={true}\n      closable={false}\n      title={props.modalTitle}\n      visible={props.isVisible}\n      onCancel={() => props.hideModal()}\n      footer={null}>\n      <Formik\n        enableReinitialize\n        initialValues={{\n          title: props.job ? props.job.title : '',\n          description: props.job ? props.job.description : '',\n        }}\n        validationSchema={schema}\n        onSubmit={(values, { setSubmitting }) => {\n          if (props.modalTitle === 'ویرایش') {\n            handleEdit(props.job.id, values);\n          } else {\n            handleOk(values);\n          }\n          setSubmitting(false);\n          values.title = '';\n        }}>\n        {({\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <span>عنوان موقعیت شغلی</span>\n\n            <Input\n              autoComplete='off'\n              className={`job-create-modal__input ${\n                errors.title && touched.title\n                  ? 'job-create-modal__input--error'\n                  : ''\n              } `}\n              id='title'\n              placeholder='طراح گرافیک'\n              value={values.title}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            {errors.title && touched.title && (\n              <Text className='job-create-modal__danger' type='danger'>\n                {errors.title}\n              </Text>\n            )}\n            <span>توضیحات</span>\n            <TextArea\n              autosize={{\n                minRows: 4,\n                maxRows: 6,\n              }}\n              className={`job-create-modal__input ${\n                errors.description && touched.description\n                  ? 'job-create-modal__input--error'\n                  : ''\n              }`}\n              id='description'\n              placeholder='توضیحات موقعیت شغلی خود را بنویسید'\n              value={values.description}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            {errors.description && touched.description && (\n              <Text className='job-create-modal__danger' type='danger'>\n                {errors.description}\n              </Text>\n            )}\n            <Button\n              className='job-create-modal__button'\n              type='primary'\n              htmlType='submit'\n              disabled={isSubmitting}>\n              ایجاد\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}