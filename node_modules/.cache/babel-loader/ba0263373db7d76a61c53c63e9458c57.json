{"ast":null,"code":"var _jsxFileName = \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/pages/LoginPage/LoginPage.tsx\";\nimport React, { useEffect } from 'react';\nimport { Footer } from 'components';\nimport { Card, Button, message } from 'antd';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport './LoginPage.scss';\nimport { Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginRequest } from 'store/actions';\nimport * as Yup from 'yup';\nimport { LOGIN_SUCCESS, LOGIN_ERROR } from 'store/actionTypes';\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().trim('لطفا ایمیل خود را وارد کنید').email('ایمیل نامعتبر است!').required('لطفا ایمیل خود را وارد کنید'),\n  password: Yup.string().required('لطفا رمز عبور خود را وارد کنید').trim('لطفا رمز عبور خود را وارد کنید')\n});\nexport const LoginPage = () => {\n  let history = useHistory();\n  const loadingState = useSelector(state => state.login.status);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log('loadingState', loadingState);\n\n    if (loadingState === LOGIN_SUCCESS) {\n      history.push('/dashboard');\n    } else if (loadingState == LOGIN_ERROR) {\n      message.error('لطفا دوباره سعی نمایید.');\n    }\n  }, [loadingState]);\n\n  function goToDashBoard() {\n    history.push('/dashboard');\n  }\n\n  const renderCommments = () => {\n    return React.createElement(React.Fragment, null, \" Some fake data here \");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, renderCommments(), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login__profileLogin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"\\u067E\\u0631\\u0648\\u0641\\u0627\\u06CC\\u0644\",\n    src: require('../../assets/profile-logo.svg'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"login__cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"login__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u067E\\u0631\\u0648\\u0641\\u0627\\u06CC\\u0644\"), React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: LoginSchema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setSubmitting(true);\n      dispatch(loginRequest(values.email, values.password));\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props => {\n    const values = props.values,\n          touched = props.touched,\n          errors = props.errors,\n          isSubmitting = props.isSubmitting,\n          handleChange = props.handleChange,\n          handleBlur = props.handleBlur,\n          handleSubmit = props.handleSubmit;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"login__input__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\u0627\\u06CC\\u0645\\u06CC\\u0644 \\u06CC\\u0627 \\u0622\\u062F\\u0631\\u0633 \\u067E\\u0631\\u0648\\u0641\\u0627\\u06CC\\u0644\"), React.createElement(Input, {\n      className: errors.email && touched.email ? 'login__input--error' : '',\n      id: \"email\",\n      placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644*\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), errors.email && touched.email && React.createElement(\"p\", {\n      className: \"login__error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, errors.email), React.createElement(\"span\", {\n      className: \"login__input__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\"), React.createElement(Input, {\n      className: errors.password && touched.password ? 'login__input--error' : '',\n      id: \"password\",\n      placeholder: \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631*\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), errors.password && touched.password && React.createElement(\"p\", {\n      className: \"login__error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, errors.password), React.createElement(Button, {\n      className: \"login__button\",\n      type: \"primary\",\n      disabled: isSubmitting,\n      htmlType: \"submit\",\n      name: \"\\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u067E\\u0631\\u0648\\u0641\\u0627\\u06CC\\u0644\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"\\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u067E\\u0631\\u0648\\u0641\\u0627\\u06CC\\u0644\"));\n  }), React.createElement(\"div\", {\n    className: \"login__forgetPass\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"# \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0641\\u0631\\u0627\\u0645\\u0648\\u0634 \\u06A9\\u0631\\u062F\\u0647 \\u0627\\u06CC\\u062F\\u061F\"))), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login__secondcard__text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \" \\u062D\\u0633\\u0627\\u0628\\u06CC \\u062F\\u0631 \\u067E\\u0631\\u0648\\u0641\\u0627\\u06CC\\u0644 \\u0646\\u062F\\u0627\\u0631\\u06CC\\u062F\\u061F\"), '  ', React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645 \\u062F\\u0631 \\u067E\\u0631\\u0648\\u0641\\u0627\\u06CC\\u0644 \")))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })));\n}; // const mapStateToProps = (state: any) => {\n//   return {\n//     token: state.login.token,\n//     status: state.login.status,\n//   };\n// };\n// const mapDispatchToProps = (dispatch: any) => {\n//   return {\n//     login: (email: string, password: string) =>\n//       dispatch({\n//         type: LOGIN_REQUEST,\n//         email: 'eve.holt@reqres.in',\n//         password: 'cityslicka',\n//       }),\n//   };\n// };\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps,\n// )(LoginPage);","map":{"version":3,"sources":["/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/pages/LoginPage/LoginPage.tsx"],"names":["React","useEffect","Footer","Card","Button","message","Link","useHistory","Formik","Input","useDispatch","useSelector","loginRequest","Yup","LOGIN_SUCCESS","LOGIN_ERROR","LoginSchema","object","shape","email","string","trim","required","password","LoginPage","history","loadingState","state","login","status","dispatch","console","log","push","error","goToDashBoard","renderCommments","require","values","setSubmitting","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Footer } from 'components';\nimport { Card, Button, message } from 'antd';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport './LoginPage.scss';\nimport { Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginRequest } from 'store/actions';\nimport * as Yup from 'yup';\nimport { LOGIN_SUCCESS, LOGIN_ERROR } from 'store/actionTypes';\nimport { isAuth } from 'configs/isAuth';\nimport { forwardTo } from 'configs/hisotry';\nimport { JSXElement } from '@babel/types';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .trim('لطفا ایمیل خود را وارد کنید')\n    .email('ایمیل نامعتبر است!')\n    .required('لطفا ایمیل خود را وارد کنید'),\n  password: Yup.string()\n    .required('لطفا رمز عبور خود را وارد کنید')\n    .trim('لطفا رمز عبور خود را وارد کنید'),\n});\n\nexport const LoginPage: React.FC = () => {\n  let history = useHistory();\n  const loadingState = useSelector((state: any) => state.login.status);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log('loadingState', loadingState);\n    if (loadingState === LOGIN_SUCCESS) {\n      history.push('/dashboard');\n    } else if (loadingState == LOGIN_ERROR) {\n      message.error('لطفا دوباره سعی نمایید.');\n    }\n  }, [loadingState]);\n\n  function goToDashBoard() {\n    history.push('/dashboard');\n  }\n\n  const renderCommments = () => {\n    return <> Some fake data here </>;\n  };\n  return (\n    <div className='login'>\n      {renderCommments()}\n      <div className='container'>\n        <div className='login__profileLogin'>\n          <img alt='پروفایل' src={require('../../assets/profile-logo.svg')} />\n        </div>\n        <div className='login__cards'>\n          <Card>\n            <h3 className='login__title'>ورود به پروفایل</h3>\n            <Formik\n              initialValues={{\n                email: '',\n                password: '',\n              }}\n              validationSchema={LoginSchema}\n              onSubmit={(values, { setSubmitting }) => {\n                setSubmitting(true);\n                dispatch(loginRequest(values.email, values.password));\n                setSubmitting(false);\n              }}>\n              {props => {\n                const {\n                  values,\n                  touched,\n                  errors,\n                  // dirty,\n                  isSubmitting,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                } = props;\n                return (\n                  <form onSubmit={handleSubmit}>\n                    <span className='login__input__label'>\n                      ایمیل یا آدرس پروفایل\n                    </span>\n                    <Input\n                      className={\n                        errors.email && touched.email\n                          ? 'login__input--error'\n                          : ''\n                      }\n                      id='email'\n                      placeholder='ایمیل*'\n                      type='email'\n                      value={values.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {errors.email && touched.email && (\n                      <p className='login__error'>{errors.email}</p>\n                    )}\n                    <span className='login__input__label'>رمز عبور</span>\n                    <Input\n                      className={\n                        errors.password && touched.password\n                          ? 'login__input--error'\n                          : ''\n                      }\n                      id='password'\n                      placeholder='رمز عبور*'\n                      type='password'\n                      value={values.password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {errors.password && touched.password && (\n                      <p className='login__error'>{errors.password}</p>\n                    )}\n                    <Button\n                      className='login__button'\n                      type='primary'\n                      disabled={isSubmitting}\n                      htmlType='submit'\n                      name='ورود به پروفایل'>\n                      ورود به پروفایل\n                    </Button>\n                  </form>\n                );\n              }}\n            </Formik>\n            <div className='login__forgetPass'>\n              <Link to='# '>رمز عبور خود را فراموش کرده اید؟</Link>\n            </div>\n          </Card>\n          <Card>\n            <div className='login__secondcard__text'>\n              <span> حسابی در پروفایل ندارید؟</span>\n              {'  '}\n              <Link to='/'>ثبت نام در پروفایل </Link>\n            </div>\n          </Card>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\n// const mapStateToProps = (state: any) => {\n//   return {\n//     token: state.login.token,\n//     status: state.login.status,\n//   };\n// };\n// const mapDispatchToProps = (dispatch: any) => {\n//   return {\n//     login: (email: string, password: string) =>\n//       dispatch({\n//         type: LOGIN_REQUEST,\n//         email: 'eve.holt@reqres.in',\n//         password: 'cityslicka',\n//       }),\n//   };\n// };\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps,\n// )(LoginPage);\n"]},"metadata":{},"sourceType":"module"}