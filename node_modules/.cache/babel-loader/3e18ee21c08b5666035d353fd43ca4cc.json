{"ast":null,"code":"import _defineProperty from \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/pages/EmployerStagePage/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { Layout, Dropdown, Menu, Icon } from 'antd';\nimport { StageContainer } from 'containers';\nimport preload from './preload';\nimport 'layouts/EmployerLayout/style.scss';\nimport './style.scss';\nconst Header = Layout.Header,\n      Content = Layout.Content;\n\nfunction handleMenuClick(e) {\n  console.log('click', e);\n}\n\nconst menu = React.createElement(Menu, {\n  onClick: handleMenuClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(Menu.Item, {\n  key: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"\\u0622\\u0631\\u0634\\u06CC\\u0648\"));\nexport const EmployerStagePage = () => {\n  const _useState = useState(preload),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const onDragEnd = result => {\n    const source = result.source,\n          destination = result.destination,\n          draggableId = result.draggableId;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    const stage = data.stages[source.droppableId];\n    const newPersonIds = Array.from(stage.personIds);\n    newPersonIds.splice(source.index, 1);\n    newPersonIds.splice(destination.index, 0, draggableId);\n\n    const newStage = _objectSpread({}, stage, {\n      personIds: newPersonIds\n    });\n\n    const newState = _objectSpread({}, data, {\n      stages: _objectSpread({}, data.stages, {\n        [newStage.id]: newStage\n      })\n    });\n\n    setData(newState);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    className: \"employer-layout__header employer-stage-page__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"employer-stage-page__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\\u0645\\u0648\\u0642\\u0639\\u06CC\\u062A \\u0634\\u063A\\u0644\\u06CC\"), \"\\xA0\", React.createElement(\"span\", {\n    className: \"employer-stage-page__title--sub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"\\u0637\\u0631\\u0627\\u062D \\u062A\\u062C\\u0631\\u0628\\u0647 \\u06A9\\u0627\\u0631\\u0628\\u0631\\u06CC\")), React.createElement(Dropdown.Button, {\n    className: \"employer-stage-page__header__dropdown\",\n    overlay: menu,\n    icon: React.createElement(Icon, {\n      type: \"down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), \"\\xA0\\u0648\\u06CC\\u0631\\u0627\\u06CC\\u0634\"))), React.createElement(Content, {\n    className: \"employer-layout__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"employer-stage-page__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, data.stageOrder.map(stageId => {\n    const stage = data.stages[stageId];\n    const people = stage.personIds.map(personId => data.people[personId]);\n    return React.createElement(Droppable, {\n      key: stage.id,\n      droppableId: stage.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, provided => React.createElement(StageContainer, Object.assign({\n      stage: stage,\n      people: people,\n      innerRef: provided.innerRef\n    }, provided.droppableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), provided.placeholder));\n  })))));\n};","map":{"version":3,"sources":["/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/pages/EmployerStagePage/index.tsx"],"names":["React","useState","DragDropContext","Droppable","Layout","Dropdown","Menu","Icon","StageContainer","preload","Header","Content","handleMenuClick","e","console","log","menu","EmployerStagePage","data","setData","onDragEnd","result","source","destination","draggableId","droppableId","index","stage","stages","newPersonIds","Array","from","personIds","splice","newStage","newState","id","stageOrder","map","stageId","people","personId","provided","innerRef","droppableProps","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { Layout, Dropdown, Menu, Icon } from 'antd';\n\nimport { StageContainer } from 'containers';\nimport preload from './preload';\nimport 'layouts/EmployerLayout/style.scss';\nimport './style.scss';\n\nconst { Header, Content } = Layout;\n\nfunction handleMenuClick(e: any) {\n  console.log('click', e);\n}\n\nconst menu = (\n  <Menu onClick={handleMenuClick}>\n    <Menu.Item key='1'>آرشیو</Menu.Item>\n  </Menu>\n);\n\nexport const EmployerStagePage: React.FC = () => {\n  const [data, setData] = useState(preload);\n\n  const onDragEnd = (result: any) => {\n    const { source, destination, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const stage = (data.stages as any)[source.droppableId];\n    const newPersonIds = Array.from(stage.personIds);\n    newPersonIds.splice(source.index, 1);\n    newPersonIds.splice(destination.index, 0, draggableId);\n\n    const newStage = {\n      ...stage,\n      personIds: newPersonIds,\n    };\n\n    const newState = {\n      ...data,\n      stages: {\n        ...data.stages,\n        [newStage.id]: newStage,\n      },\n    };\n\n    setData(newState);\n  };\n\n  return (\n    <>\n      <Header className='employer-layout__header employer-stage-page__header'>\n        <p className='employer-stage-page__title'>\n          <span>موقعیت شغلی</span>&nbsp;\n          <span className='employer-stage-page__title--sub'>\n            طراح تجربه کاربری\n          </span>\n        </p>\n        <Dropdown.Button\n          className='employer-stage-page__header__dropdown'\n          overlay={menu}\n          icon={<Icon type='down' />}>\n          <div>\n            <Icon type='edit' />\n            &nbsp;ویرایش\n          </div>\n        </Dropdown.Button>\n      </Header>\n      <Content className='employer-layout__content'>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <div className='employer-stage-page__content'>\n            {data.stageOrder.map((stageId: any) => {\n              const stage = (data.stages as any)[stageId];\n              const people = stage.personIds.map(\n                (personId: any) => (data.people as any)[personId],\n              );\n\n              return (\n                <Droppable key={stage.id} droppableId={stage.id}>\n                  {provided => (\n                    <StageContainer\n                      stage={stage}\n                      people={people}\n                      innerRef={provided.innerRef}\n                      {...provided.droppableProps}>\n                      {provided.placeholder}\n                    </StageContainer>\n                  )}\n                </Droppable>\n              );\n            })}\n          </div>\n        </DragDropContext>\n      </Content>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}