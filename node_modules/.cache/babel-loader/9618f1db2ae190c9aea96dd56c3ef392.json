{"ast":null,"code":"import _defineProperty from \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CREATE_USER_STAGE, FAIL_FETCH_USER_STAGES, FAIL_UPDATE_USER_STAGE, FETCH_USER_STAGES, UPDATE_USER_STAGE, FETCH_USERS, FAIL_FETCH_USERS } from 'store/actionTypes/UserStage';\nconst initialState = {\n  users: [],\n  stages: []\n};\nexport const UserStageReducer = (state = initialState, {\n  type,\n  EmployeeId,\n  StageId,\n  JobOfferId,\n  Initiate,\n  StageIds,\n  listOfUsers,\n  newUser,\n  userStages,\n  newUserStage,\n  createdNewStage\n}) => {\n  switch (type) {\n    // fetching some user data\n    case FETCH_USERS:\n      return _objectSpread({}, state, {\n        users: listOfUsers\n      });\n\n    case FAIL_FETCH_USERS:\n      return _objectSpread({}, state, {\n        users: []\n      });\n    // updating a single usr Stage\n\n    case UPDATE_USER_STAGE:\n      const newUsersState = _objectSpread({}, state.users);\n\n      const findedUserIndex = state.users.findIndex(user => {\n        return user.employeeId === EmployeeId;\n      });\n      newUsersState[findedUserIndex] = newUser;\n      return _objectSpread({}, state, {\n        users: newUsersState\n      });\n\n    case FAIL_UPDATE_USER_STAGE:\n      return _objectSpread({}, state);\n    // fetch user stages\n\n    case FETCH_USER_STAGES:\n      return _objectSpread({}, state, {\n        stages: userStages\n      });\n\n    case FAIL_FETCH_USER_STAGES:\n      return _objectSpread({}, state);\n    // updating user stages\n\n    case UPDATE_USER_STAGE:\n      const newUserStages = _objectSpread({}, state.stages);\n\n      const findedStage = state.stages.findIndex(stage => {\n        return stage.StageId === stage.id;\n      });\n      newUserStages[findedStage] = newUserStage;\n      return _objectSpread({}, state, {\n        stages: newUserStages\n      });\n\n    case FAIL_UPDATE_USER_STAGE:\n      return _objectSpread({}, state);\n    // creating a new userStage\n\n    case CREATE_USER_STAGE:\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/store/reducers/UserStage.ts"],"names":["CREATE_USER_STAGE","FAIL_FETCH_USER_STAGES","FAIL_UPDATE_USER_STAGE","FETCH_USER_STAGES","UPDATE_USER_STAGE","FETCH_USERS","FAIL_FETCH_USERS","initialState","users","stages","UserStageReducer","state","type","EmployeeId","StageId","JobOfferId","Initiate","StageIds","listOfUsers","newUser","userStages","newUserStage","createdNewStage","newUsersState","findedUserIndex","findIndex","user","employeeId","newUserStages","findedStage","stage","id"],"mappings":";;;;;;AAAA,SAIIA,iBAJJ,EAOIC,sBAPJ,EASIC,sBATJ,EAUIC,iBAVJ,EAYIC,iBAZJ,EAaIC,WAbJ,EAcIC,gBAdJ,QAeO,6BAfP;AAgBA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;AAKA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuB;AAAEK,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA,OAApB;AAA6BC,EAAAA,UAA7B;AAAyCC,EAAAA,QAAzC;AAAmDC,EAAAA,QAAnD;AAA6DC,EAAAA,WAA7D;AAA0EC,EAAAA,OAA1E;AAAmFC,EAAAA,UAAnF;AAA+FC,EAAAA,YAA/F;AAA6GC,EAAAA;AAA7G,CAAvB,KAAoK;AAChM,UAAQV,IAAR;AACI;AACA,SAAKP,WAAL;AACI,+BACOM,KADP;AACcH,QAAAA,KAAK,EAAEU;AADrB;;AAGJ,SAAKZ,gBAAL;AAAuB,+BAChBK,KADgB;AACTH,QAAAA,KAAK,EAAE;AADE;AAGvB;;AACA,SAAKJ,iBAAL;AACI,YAAMmB,aAAkB,qBAAQZ,KAAK,CAACH,KAAd,CAAxB;;AACA,YAAMgB,eAAe,GAAGb,KAAK,CAACH,KAAN,CAAYiB,SAAZ,CAAuBC,IAAD,IAAe;AACzD,eAAOA,IAAI,CAACC,UAAL,KAAoBd,UAA3B;AACH,OAFuB,CAAxB;AAGAU,MAAAA,aAAa,CAACC,eAAD,CAAb,GAAiCL,OAAjC;AACA,+BACOR,KADP;AACcH,QAAAA,KAAK,EAAEe;AADrB;;AAIJ,SAAKrB,sBAAL;AACI,+BAAYS,KAAZ;AAEJ;;AACA,SAAKR,iBAAL;AACI,+BACOQ,KADP;AACcF,QAAAA,MAAM,EAAEW;AADtB;;AAGJ,SAAKnB,sBAAL;AACI,+BACOU,KADP;AAKJ;;AACA,SAAKP,iBAAL;AACI,YAAMwB,aAAkB,qBAAQjB,KAAK,CAACF,MAAd,CAAxB;;AACA,YAAMoB,WAAW,GAAGlB,KAAK,CAACF,MAAN,CAAagB,SAAb,CAAwBK,KAAD,IAAgB;AACvD,eAAOA,KAAK,CAAChB,OAAN,KAAkBgB,KAAK,CAACC,EAA/B;AACH,OAFmB,CAApB;AAGAH,MAAAA,aAAa,CAACC,WAAD,CAAb,GAA6BR,YAA7B;AAEA,+BACOV,KADP;AACcF,QAAAA,MAAM,EAAEmB;AADtB;;AAIJ,SAAK1B,sBAAL;AACI,+BAAYS,KAAZ;AAGJ;;AACA,SAAKX,iBAAL;AAGI,+BACOW,KADP;;AAGJ;AACI,aAAOA,KAAP;AA1DR;AA4DH,CA7DM","sourcesContent":["import {\n    CHANGE_USER_STAGE,\n    FAIL_CHANGE_USER_STAGE,\n    CHANGE_ORDER_OF_USER_STAGE,\n    CREATE_USER_STAGE,\n    FAIL_CHANGE_ORDER_OF_USER_STAGE,\n    FAIL_CREATE_USER_STAGE,\n    FAIL_FETCH_USER_STAGES,\n    FAIL_REMOVE_USER_STAGE,\n    FAIL_UPDATE_USER_STAGE,\n    FETCH_USER_STAGES,\n    REMOVE_USER_STAGE,\n    UPDATE_USER_STAGE,\n    FETCH_USERS,\n    FAIL_FETCH_USERS\n} from 'store/actionTypes/UserStage';\nconst initialState = {\n    users: [],\n    stages: []\n};\n\nexport const UserStageReducer = (state = initialState, { type, EmployeeId, StageId, JobOfferId, Initiate, StageIds, listOfUsers, newUser, userStages, newUserStage, createdNewStage }: any): any => {\n    switch (type) {\n        // fetching some user data\n        case FETCH_USERS:\n            return {\n                ...state, users: listOfUsers\n            }\n        case FAIL_FETCH_USERS: return {\n            ...state, users: []\n        }\n        // updating a single usr Stage\n        case UPDATE_USER_STAGE:\n            const newUsersState: any = { ...state.users }\n            const findedUserIndex = state.users.findIndex((user: any) => {\n                return user.employeeId === EmployeeId;\n            });\n            newUsersState[findedUserIndex] = newUser\n            return {\n                ...state, users: newUsersState\n            }\n\n        case FAIL_UPDATE_USER_STAGE:\n            return { ...state }\n\n        // fetch user stages\n        case FETCH_USER_STAGES:\n            return {\n                ...state, stages: userStages\n            }\n        case FAIL_FETCH_USER_STAGES:\n            return {\n                ...state\n            }\n\n\n        // updating user stages\n        case UPDATE_USER_STAGE:\n            const newUserStages: any = { ...state.stages }\n            const findedStage = state.stages.findIndex((stage: any) => {\n                return stage.StageId === stage.id;\n            });\n            newUserStages[findedStage] = newUserStage\n\n            return {\n                ...state, stages: newUserStages\n            }\n\n        case FAIL_UPDATE_USER_STAGE:\n            return { ...state }\n\n\n        // creating a new userStage\n        case CREATE_USER_STAGE:\n\n\n            return {\n                ...state\n            }\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}