{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { jobListError, jobListSuccess } from 'store/actions';\nimport { JOB_LIST_FAILED, JOB_LIST_SUCCESS, JOB_LIST_REQUEST } from 'store/actionTypes';\nimport axios from 'axios';\nexport function getListApi(jobTitle, from, limit) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let params = {\n        params: {\n          jobTitle,\n          from,\n          limit\n        }\n      };\n      const result = await axios.get('https://jsonplaceholder.typicode.com/comments' // params,\n      ); // console.log(result.data.slice(0, 10));\n\n      resolve(result.data.slice(0, 10));\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nexport function* getJobList(payload) {\n  try {\n    const result = yield call(getListApi, payload.jobTitle, payload.from, payload.limit);\n    yield put(jobListSuccess(JOB_LIST_SUCCESS, result));\n  } catch (e) {\n    yield put(jobListError(JOB_LIST_FAILED));\n  }\n}\nexport function* getJobListFlow() {\n  yield takeLatest(JOB_LIST_REQUEST, getJobList);\n}","map":{"version":3,"sources":["/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/store/sagas/jobListSaga.tsx"],"names":["call","put","takeLatest","jobListError","jobListSuccess","JOB_LIST_FAILED","JOB_LIST_SUCCESS","JOB_LIST_REQUEST","axios","getListApi","jobTitle","from","limit","Promise","resolve","reject","params","result","get","data","slice","error","getJobList","payload","e","getJobListFlow"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SACEC,eADF,EAEEC,gBAFF,EAGEC,gBAHF,QAKO,mBALP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAAsCC,IAAtC,EAAoDC,KAApD,EAAmE;AACxE,SAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5C,QAAI;AACF,UAAIC,MAAM,GAAG;AACXA,QAAAA,MAAM,EAAE;AACNN,UAAAA,QADM;AAENC,UAAAA,IAFM;AAGNC,UAAAA;AAHM;AADG,OAAb;AAOA,YAAMK,MAAM,GAAG,MAAMT,KAAK,CAACU,GAAN,CACnB,+CADmB,CAEnB;AAFmB,OAArB,CARE,CAYF;;AACAJ,MAAAA,OAAO,CAACG,MAAM,CAACE,IAAP,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAD,CAAP;AACD,KAdD,CAcE,OAAOC,KAAP,EAAc;AACdN,MAAAA,MAAM,CAACM,KAAD,CAAN;AACD;AACF,GAlBM,CAAP;AAmBD;AAED,OAAO,UAAUC,UAAV,CAAqBC,OAArB,EAAmC;AACxC,MAAI;AACF,UAAMN,MAAM,GAAG,MAAMjB,IAAI,CACvBS,UADuB,EAEvBc,OAAO,CAACb,QAFe,EAGvBa,OAAO,CAACZ,IAHe,EAIvBY,OAAO,CAACX,KAJe,CAAzB;AAOA,UAAMX,GAAG,CAACG,cAAc,CAACE,gBAAD,EAAmBW,MAAnB,CAAf,CAAT;AACD,GATD,CASE,OAAOO,CAAP,EAAU;AACV,UAAMvB,GAAG,CAACE,YAAY,CAACE,eAAD,CAAb,CAAT;AACD;AACF;AAED,OAAO,UAAUoB,cAAV,GAAgC;AACrC,QAAMvB,UAAU,CAACK,gBAAD,EAAmBe,UAAnB,CAAhB;AACD","sourcesContent":["import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { jobListError, jobListSuccess } from 'store/actions';\nimport {\n  JOB_LIST_FAILED,\n  JOB_LIST_SUCCESS,\n  JOB_LIST_REQUEST,\n  JOB_LIST_SEARCH,\n} from 'store/actionTypes';\nimport Api from 'Api/api';\nimport axios from 'axios';\n\nexport function getListApi(jobTitle: string, from: number, limit: number) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let params = {\n        params: {\n          jobTitle,\n          from,\n          limit,\n        },\n      };\n      const result = await axios.get(\n        'https://jsonplaceholder.typicode.com/comments',\n        // params,\n      );\n      // console.log(result.data.slice(0, 10));\n      resolve(result.data.slice(0, 10));\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\nexport function* getJobList(payload: any) {\n  try {\n    const result = yield call(\n      getListApi,\n      payload.jobTitle,\n      payload.from,\n      payload.limit,\n    );\n\n    yield put(jobListSuccess(JOB_LIST_SUCCESS, result));\n  } catch (e) {\n    yield put(jobListError(JOB_LIST_FAILED));\n  }\n}\n\nexport function* getJobListFlow(): any {\n  yield takeLatest(JOB_LIST_REQUEST, getJobList);\n}\n"]},"metadata":{},"sourceType":"module"}