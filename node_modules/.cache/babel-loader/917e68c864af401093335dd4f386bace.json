{"ast":null,"code":"import _slicedToArray from \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/pages/EmployerJobsPage/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Layout, Button, Pagination, Icon } from 'antd';\nimport { JobCard, JobCreateModal } from 'components';\nimport { fetchJobs, deleteJob } from 'store/actions';\nimport 'layouts/EmployerLayout/style.scss';\nimport './style.scss';\nconst Header = Layout.Header,\n      Content = Layout.Content;\nconst numEachPage = 7;\nexport const EmployerJobsPage = () => {\n  const jobs = useSelector(state => state.jobs);\n  const dispatch = useDispatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        visible = _useState2[0],\n        setVisible = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modalTitle = _useState4[0],\n        setModalTitle = _useState4[1];\n\n  const _useState5 = useState(-1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        jobId = _useState6[0],\n        setJobId = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        minValue = _useState8[0],\n        setMinValue = _useState8[1];\n\n  const _useState9 = useState(numEachPage),\n        _useState10 = _slicedToArray(_useState9, 2),\n        maxValue = _useState10[0],\n        setMaxValue = _useState10[1];\n\n  useEffect(() => {\n    dispatch(fetchJobs());\n  }, []);\n  let job = jobs.data.find(item => item.id === jobId);\n\n  function onPageChange(pageNumber) {\n    setMinValue((pageNumber - 1) * numEachPage);\n    setMaxValue(pageNumber * numEachPage);\n  }\n\n  function handleEdit(id) {\n    document.body.classList.add('modal-open');\n    setModalTitle('ویرایش');\n    setJobId(id);\n    setVisible(true);\n  }\n\n  function handleAdd() {\n    document.body.classList.add('modal-open');\n    setModalTitle('ایجاد موقعیت شغلی');\n    setJobId(-1);\n    setVisible(true);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    className: \"employer-layout__header employer-jobs-page__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => handleAdd(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    className: \"employer-jobs-page__icon\",\n    type: \"plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), \"\\u0627\\u06CC\\u062C\\u0627\\u062F \\u0645\\u0648\\u0642\\u0639\\u06CC\\u062A \\u0634\\u063A\\u0644\\u06CC\")), React.createElement(Content, {\n    className: \"employer-layout__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"employer-jobs-page__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"\\u0645\\u0648\\u0642\\u0639\\u06CC\\u062A \\u0647\\u0627\\u06CC \\u0634\\u063A\\u0644\\u06CC\"), jobs.data.slice(minValue, maxValue).map(job => React.createElement(JobCard, {\n    key: job.id,\n    id: job.id,\n    title: job.title,\n    numOfCandidates: job.numOfCandidates,\n    handleDelete: () => dispatch(deleteJob(job.id)),\n    handleEdit: () => handleEdit(job.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Pagination, {\n    className: \"employer-jobs-page__pagination\",\n    defaultCurrent: 1,\n    defaultPageSize: numEachPage,\n    total: jobs.data.length // hideOnSinglePage={true}\n    ,\n    onChange: onPageChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(JobCreateModal, {\n    job: job,\n    modalTitle: modalTitle,\n    isVisible: visible,\n    hideModal: () => {\n      setVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/home/rasoolhp/Desktop/profile-job/Profile-Jobs-Front/src/pages/EmployerJobsPage/index.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","Layout","Button","Pagination","Icon","JobCard","JobCreateModal","fetchJobs","deleteJob","Header","Content","numEachPage","EmployerJobsPage","jobs","state","dispatch","visible","setVisible","modalTitle","setModalTitle","jobId","setJobId","minValue","setMinValue","maxValue","setMaxValue","job","data","find","item","id","onPageChange","pageNumber","handleEdit","document","body","classList","add","handleAdd","slice","map","title","numOfCandidates","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Layout, Button, Pagination, Icon } from 'antd';\n\nimport { JobCard, JobCreateModal } from 'components';\nimport { fetchJobs, deleteJob } from 'store/actions';\n\nimport 'layouts/EmployerLayout/style.scss';\nimport './style.scss';\n\nconst { Header, Content } = Layout;\n\nconst numEachPage = 7;\n\nexport const EmployerJobsPage: React.FC = () => {\n  const jobs = useSelector((state: any) => state.jobs);\n  const dispatch = useDispatch();\n  const [visible, setVisible] = useState(false);\n  const [modalTitle, setModalTitle] = useState('');\n  const [jobId, setJobId] = useState(-1);\n\n  const [minValue, setMinValue] = useState(0);\n  const [maxValue, setMaxValue] = useState(numEachPage);\n\n  useEffect(() => {\n    dispatch(fetchJobs());\n  }, []);\n\n  let job = jobs.data.find((item: any) => item.id === jobId);\n\n  function onPageChange(pageNumber: number) {\n    setMinValue((pageNumber - 1) * numEachPage);\n    setMaxValue(pageNumber * numEachPage);\n  }\n\n  function handleEdit(id: number) {\n    document.body.classList.add('modal-open');\n    setModalTitle('ویرایش');\n    setJobId(id);\n    setVisible(true);\n  }\n\n  function handleAdd() {\n    document.body.classList.add('modal-open');\n    setModalTitle('ایجاد موقعیت شغلی');\n    setJobId(-1);\n    setVisible(true);\n  }\n\n  return (\n    <>\n      <Header className='employer-layout__header employer-jobs-page__header'>\n        <Button type='primary' onClick={() => handleAdd()}>\n          <Icon className='employer-jobs-page__icon' type='plus' />\n          ایجاد موقعیت شغلی\n        </Button>\n      </Header>\n      <Content className='employer-layout__content'>\n        <h1 className='employer-jobs-page__title'>موقعیت های شغلی</h1>\n        {jobs.data.slice(minValue, maxValue).map((job: any) => (\n          <JobCard\n            key={job.id}\n            id={job.id}\n            title={job.title}\n            numOfCandidates={job.numOfCandidates}\n            handleDelete={() => dispatch(deleteJob(job.id))}\n            handleEdit={() => handleEdit(job.id)}\n          />\n        ))}\n        <Pagination\n          className='employer-jobs-page__pagination'\n          defaultCurrent={1}\n          defaultPageSize={numEachPage}\n          total={jobs.data.length}\n          // hideOnSinglePage={true}\n          onChange={onPageChange}\n        />\n      </Content>\n\n      <JobCreateModal\n        job={job}\n        modalTitle={modalTitle}\n        isVisible={visible}\n        hideModal={() => {\n          setVisible(false);\n        }}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}